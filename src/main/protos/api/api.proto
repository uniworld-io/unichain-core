syntax = "proto3";
package protocol;

import "core/Unichain.proto";
import "core/Contract.proto";
import "google/api/annotations.proto";


option java_package = "org.unichain.api"; //Specify the name of the package that generated the Java file
option java_outer_classname = "GrpcAPI"; //Specify the class name of the generated Java file
option go_package = "github.com/unichainprotocol/grpc-gateway/api";

service Wallet {
  rpc GetFutureTransfer (FutureQuery) returns (FuturePack) {
    option (google.api.http) = {
      post: "/wallet/getfuturetransfer"
      body: "*"
      additional_bindings {
        get: "/wallet/getfuturetransfer"
      }
    };
  };

  /**
    URC30
   */
  rpc GetFutureToken (FutureTokenQuery) returns (FutureTokenPack) {
    option (google.api.http) = {
      post: "/wallet/getfuturetoken"
      body: "*"
      additional_bindings {
        get: "/wallet/getfuturetoken"
      }
    };
  };

  rpc GetTokenPool (TokenPoolQuery) returns (TokenPage) {
    option (google.api.http) = {
      post: "/wallet/gettokenpool"
      body: "*"
      additional_bindings {
        get: "/wallet/gettokenpool"
      }
    };
  };

  /**
  Urc20
 */
  rpc Urc20FutureGet (Urc20FutureTokenQuery) returns (Urc20FutureTokenPack) {
    option (google.api.http) = {
      post: "/wallet/urc20futureget"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20futureget"
      }
    };
  };

  rpc Urc20ContractList (Urc20ContractQuery) returns (Urc20ContractPage) {
    option (google.api.http) = {
      post: "/wallet/urc20contractlist"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20contractlist"
      }
    };
  };

  rpc Urc20Name (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20name"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20name"
      }
    };
  };

  rpc Urc20Symbol (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20symbol"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20symbol"
      }
    };
  };

  rpc Urc20Decimals (AddressMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20decimals"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20decimals"
      }
    };
  };

  rpc Urc20TotalSupply (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20totalsupply"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20totalsupply"
      }
    };
  };

  rpc Urc20BalanceOf (Urc20BalanceOfQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20balanceof"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20balanceof"
      }
    };
  };

  rpc Urc20GetOwner (AddressMessage) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20getowner"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20getowner"
      }
    };
  };

  rpc Urc20Allowance (Urc20AllowanceQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc20allowance"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20allowance"
      }
    };
  };

  /**
    urc721
   */
  rpc Urc721ListContract (Urc721ContractQuery) returns (Urc721ContractPage) {
    option (google.api.http) = {
      post: "/wallet/urc721contractlist"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721contractlist"
      }
    };
  };

  rpc Urc721ListToken (Urc721TokenListQuery) returns (Urc721TokenPage) {
    option (google.api.http) = {
      post: "/wallet/urc721tokenlist"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721tokenlist"
      }
    };
  };

  rpc Urc721GetContract (AddressMessage) returns (Urc721Contract) {
    option (google.api.http) = {
      post: "/wallet/urc721contractget"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721contractget"
      }
    };
  };

  rpc Urc721GetToken (Urc721TokenQuery) returns (Urc721Token) {
    option (google.api.http) = {
      post: "/wallet/urc721tokenget"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721tokenget"
      }
    };
  };

  rpc Urc721GetBalanceOf (Urc721BalanceOfQuery) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721balanceof"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721balanceof"
      }
    };
  };

  rpc Urc721GetName (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721name"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721name"
      }
    };
  };

  rpc Urc721GetSymbol (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721symbol"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721symbol"
      }
    };
  };

  rpc Urc721GetTotalSupply (AddressMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721totalsupply"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721totalsupply"
      }
    };
  };

  rpc Urc721GetTokenUri (Urc721TokenQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721tokenuri"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721tokenuri"
      }
    };
  };

  rpc Urc721GetOwnerOf (Urc721TokenQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721ownerof"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721ownerof"
      }
    };
  };

  rpc Urc721GetApproved (Urc721TokenQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721getapproved"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721getapproved"
      }
    };
  };

  rpc Urc721GetApprovedForAll (Urc721ApprovedForAllQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721getapprovedforall"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721getapprovedforall"
      }
    };
  };

  rpc Urc721IsApprovedForAll (Urc721IsApprovedForAllQuery) returns (BoolMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721isapprovedforall"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721isapprovedforall"
      }
    };
  };

  rpc GetAccount (Account) returns (Account) {
    option (google.api.http) = {
      post: "/wallet/getaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/getaccount"
      }
    };
  };

  rpc GetAccountById (Account) returns (Account) {
    option (google.api.http) = {
      post: "/wallet/getaccountbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/getaccountbyid"
      }
    };
  };

  //Please use CreateTransaction2 instead of this function.
  rpc CreateTransaction (TransferContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createtransaction"
      body: "*"
      additional_bindings {
        get: "/wallet/createtransaction"
      }
    };
  };
  //Use this function instead of CreateTransaction.
  rpc CreateTransaction2 (TransferContract) returns (TransactionExtention) {
  };

  rpc WithdrawFutureTransaction (FutureWithdrawContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/withdrawfuturetransaction"
      body: "*"
        additional_bindings {
          get: "/wallet/withdrawfuturetransaction"
      }
    };
  };

  rpc CreateFutureTransferTransaction (FutureTransferContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createfuturetransaction"
      body: "*"
        additional_bindings {
          get: "/wallet/createfuturetransaction"
      }
    };
  };

  rpc CreateFutureDealTransferTransaction (FutureDealTransferContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createfuturedealtransaction"
      body: "*"
        additional_bindings {
          get: "/wallet/createfuturedealtransaction"
      }
    };
  };

  rpc BroadcastTransaction (Transaction) returns (Return) {
    option (google.api.http) = {
      post: "/wallet/broadcasttransaction"
      body: "*"
      additional_bindings {
        get: "/wallet/broadcasttransaction"
      }
    };
  };
  //Please use UpdateAccount2 instead of this function.
  rpc UpdateAccount (AccountUpdateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/updateaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/updateaccount"
      }
    };
  };


  rpc SetAccountId (SetAccountIdContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/setaccountid"
      body: "*"
      additional_bindings {
        get: "/wallet/setaccountid"
      }
    };
  };

  //Use this function instead of UpdateAccount.
  rpc UpdateAccount2 (AccountUpdateContract) returns (TransactionExtention) {
  };

  //Please use VoteWitnessAccount2 instead of this function.
  rpc VoteWitnessAccount (VoteWitnessContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/votewitnessaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/votewitnessaccount"
      }
    };
  };

  //modify the consume_user_resource_percent
  rpc UpdateSetting (UpdateSettingContract) returns (TransactionExtention) {
  };

  //modify the energy_limit
  rpc UpdateEnergyLimit (UpdateEnergyLimitContract) returns (TransactionExtention) {
  };

  //Use this function instead of VoteWitnessAccount.
  rpc VoteWitnessAccount2 (VoteWitnessContract) returns (TransactionExtention) {
  };
  //Please use CreateAssetIssue2 instead of this function.
  rpc CreateAssetIssue (AssetIssueContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createassetissue"
      body: "*"
      additional_bindings {
        get: "/wallet/createassetissue"
      }
    };
  };
  //Use this function instead of CreateAssetIssue.
  rpc CreateAssetIssue2 (AssetIssueContract) returns (TransactionExtention) {
  };

  rpc CreateUrc721Contract (Urc721CreateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721createcontract"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721createcontract"
      }
    };
  };

  rpc Urc721Mint (Urc721MintContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721mint"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721mint"
      }
    };
  };

  rpc Urc721RemoveMinter (Urc721RemoveMinterContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721removeminter"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721removeminter"
      }
    };
  };

  rpc Urc721AddMinter (Urc721AddMinterContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721addminter"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721addminter"
      }
    };
  };

  rpc Urc721RenounceMinter (Urc721RenounceMinterContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721renounceminter"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721renounceminter"
      }
    };
  };

  rpc Urc721Burn (Urc721BurnContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721burn"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721burn"
      }
    };
  };

  rpc Urc721Approve (Urc721ApproveContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721approve"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721approve"
      }
    };
  };

  rpc Urc721SetApprovalForAll (Urc721SetApprovalForAllContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721setapprovalforall"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721setapprovalforall"
      }
    };
  };

  rpc Urc721TransferFrom (Urc721TransferFromContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc721transferfrom"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721transferfrom"
      }
    };
  };

  /**
    URC30
   */
  rpc CreateToken (CreateTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createtoken"
      body: "*"
      additional_bindings {
        get: "/wallet/createtoken"
      }
    };
  };

  rpc TransferTokenOwner (TransferTokenOwnerContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/transfertokenowner"
      body: "*"
      additional_bindings {
        get: "/wallet/transfertokenowner"
      }
    };
  };

  rpc ExchangeToken (ExchangeTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/exchangetoken"
      body: "*"
      additional_bindings {
        get: "/wallet/exchangetoken"
      }
    };
  };

  rpc ContributeTokenFee (ContributeTokenPoolFeeContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/contributetokenfee"
      body: "*"
      additional_bindings {
        get: "/wallet/contributetokenfee"
      }
    };
  };

  rpc UpdateTokenParams (UpdateTokenParamsContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/updatetokenparams"
      body: "*"
      additional_bindings {
        get: "/wallet/updatetokenparams"
      }
    };
  }

  rpc MineToken (MineTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/minetoken"
      body: "*"
      additional_bindings {
        get: "/wallet/minetoken"
      }
    };
  }

  rpc BurnToken (BurnTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/burntoken"
      body: "*"
      additional_bindings {
        get: "/wallet/burntoken"
      }
    };
  }

  rpc TransferToken (TransferTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/transfertoken"
      body: "*"
      additional_bindings {
        get: "/wallet/transfertoken"
      }
    };
  }

  rpc WithdrawTokenFuture (WithdrawFutureTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/withdrawfuturetoken"
      body: "*"
      additional_bindings {
        get: "/wallet/withdrawfuturetoken"
      }
    };
  }

  /**
    Urc20
 */
  rpc Urc20ContractCreate (Urc20CreateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20createcontract"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20createcontract"
      }
    };
  };

  rpc Urc20ContributePoolFee (Urc20ContributePoolFeeContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20contributepoolfee"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20contributepoolfee"
      }
    };
  };

  rpc Urc20UpdateParams (Urc20UpdateParamsContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20updateparams"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20updateparams"
      }
    };
  }

  rpc Urc20Mint (Urc20MintContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20mint"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20mint"
      }
    };
  }

  rpc Urc20Burn (Urc20BurnContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20burn"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20burn"
      }
    };
  }

  rpc Urc20WithdrawFuture (Urc20WithdrawFutureContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20withdrawfuture"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20withdrawfuture"
      }
    };
  }

  rpc Urc20TransferOwner (Urc20TransferOwnerContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20transferowner"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20transferowner"
      }
    };
  };

  rpc Urc20Exchange (Urc20ExchangeContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20exchange"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20exchange"
      }
    };
  };


  rpc Urc20Approve (Urc20ApproveContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20approve"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20approve"
      }
    };
  }

  rpc Urc20TransferFrom (Urc20TransferFromContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20transferfrom"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20transferfrom"
      }
    };
  }

  rpc Urc20Transfer (Urc20TransferContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/urc20transfer"
      body: "*"
      additional_bindings {
        get: "/wallet/urc20transfer"
      }
    };
  }

  /**
    PoS Bridge interface
   */
  rpc PosBridgeSetup (PosBridgeSetupContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgesetup"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgesetup"
      }
    };
  }

  rpc PosBridgeMapToken (PosBridgeMapTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgemaptoken"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgemaptoken"
      }
    };
  }

  rpc PosBridgeCleanMapToken (PosBridgeCleanMapTokenContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgecleanmaptoken"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgecleanmaptoken"
      }
    };
  }

  rpc PosBridgeDeposit(PosBridgeDepositContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgedeposit"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgedeposit"
      }
    };
  }

  rpc PosBridgeDepositExec(PosBridgeDepositExecContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgedepositexec"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgedepositexec"
      }
    };
  }

  rpc PosBridgeWithdraw(PosBridgeWithdrawContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgewithdraw"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgewithdraw"
      }
    };
  }

  rpc PosBridgeWithdrawExec(PosBridgeWithdrawExecContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/posbridgewithdrawexec"
      body: "*"
      additional_bindings {
        get: "/wallet/posbridgewithdrawexec"
      }
    };
  }

  //Please use UpdateWitness2 instead of this function.
  rpc UpdateWitness (WitnessUpdateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/updatewitness"
      body: "*"
      additional_bindings {
        get: "/wallet/updatewitness"
      }
    };
  };
  //Use this function instead of UpdateWitness.
  rpc UpdateWitness2 (WitnessUpdateContract) returns (TransactionExtention) {
  };
  //Please use CreateAccount2 instead of this function.
  rpc CreateAccount (AccountCreateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/createaccount"
      }
    };
  };
  //Use this function instead of CreateAccount.
  rpc CreateAccount2 (AccountCreateContract) returns (TransactionExtention) {
  }

  //Please use CreateWitness2 instead of this function.
  rpc CreateWitness (WitnessCreateContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/createwitness"
      body: "*"
      additional_bindings {
        get: "/wallet/createwitness"
      }
    };
  };
  //Use this function instead of CreateWitness.
  rpc CreateWitness2 (WitnessCreateContract) returns (TransactionExtention) {
  }
  //Please use TransferAsset2 instead of this function.
  rpc TransferAsset (TransferAssetContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/transferasset"
      body: "*"
      additional_bindings {
        get: "/wallet/transferasset"
      }
    };
  }
  //Use this function instead of TransferAsset.
  rpc TransferAsset2 (TransferAssetContract) returns (TransactionExtention) {
  }
  //Please use ParticipateAssetIssue2 instead of this function.
  rpc ParticipateAssetIssue (ParticipateAssetIssueContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/participateassetissue"
      body: "*"
      additional_bindings {
        get: "/wallet/participateassetissue"
      }
    };
  }
  //Use this function instead of ParticipateAssetIssue.
  rpc ParticipateAssetIssue2 (ParticipateAssetIssueContract) returns (TransactionExtention) {
  }
  //Please use FreezeBalance2 instead of this function.
  rpc FreezeBalance (FreezeBalanceContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/freezebalance"
      body: "*"
      additional_bindings {
        get: "/wallet/freezebalance"
      }
    };
  }
  //Use this function instead of FreezeBalance.
  rpc FreezeBalance2 (FreezeBalanceContract) returns (TransactionExtention) {
  }
  //Please use UnfreezeBalance2 instead of this function.
  rpc UnfreezeBalance (UnfreezeBalanceContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/unfreezebalance"
      body: "*"
      additional_bindings {
        get: "/wallet/unfreezebalance"
      }
    };
  }
  //Use this function instead of UnfreezeBalance.
  rpc UnfreezeBalance2 (UnfreezeBalanceContract) returns (TransactionExtention) {
  }
  //Please use UnfreezeAsset2 instead of this function.
  rpc UnfreezeAsset (UnfreezeAssetContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/unfreezeasset"
      body: "*"
      additional_bindings {
        get: "/wallet/unfreezeasset"
      }
    };
  }
  //Use this function instead of UnfreezeAsset.
  rpc UnfreezeAsset2 (UnfreezeAssetContract) returns (TransactionExtention) {
  }
  //Please use WithdrawBalance2 instead of this function.
  rpc WithdrawBalance (WithdrawBalanceContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/withdrawbalance"
      body: "*"
      additional_bindings {
        get: "/wallet/withdrawbalance"
      }
    };
  }
  //Use this function instead of WithdrawBalance.
  rpc WithdrawBalance2 (WithdrawBalanceContract) returns (TransactionExtention) {
  }
  //Please use UpdateAsset2 instead of this function.
  rpc UpdateAsset (UpdateAssetContract) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/updateasset"
      body: "*"
      additional_bindings {
        get: "/wallet/updateasset"
      }
    };
  }
  //Use this function instead of UpdateAsset.
  rpc UpdateAsset2 (UpdateAssetContract) returns (TransactionExtention) {
  }

  rpc ProposalCreate (ProposalCreateContract) returns (TransactionExtention) {
  }

  rpc ProposalApprove (ProposalApproveContract) returns (TransactionExtention) {
  }

  rpc ProposalDelete (ProposalDeleteContract) returns (TransactionExtention) {
  }

  rpc BuyStorage (BuyStorageContract) returns (TransactionExtention) {
  }

  rpc BuyStorageBytes (BuyStorageBytesContract) returns (TransactionExtention) {
  }

  rpc SellStorage (SellStorageContract) returns (TransactionExtention) {
  }

  rpc ExchangeCreate (ExchangeCreateContract) returns (TransactionExtention) {
  }

  rpc ExchangeInject (ExchangeInjectContract) returns (TransactionExtention) {
  }

  rpc ExchangeWithdraw (ExchangeWithdrawContract) returns (TransactionExtention) {
  }

  rpc ExchangeTransaction (ExchangeTransactionContract) returns (TransactionExtention) {
  }

  rpc ListNodes (EmptyMessage) returns (NodeList) {
    option (google.api.http) = {
      post: "/wallet/listnodes"
      body: "*"
      additional_bindings {
        get: "/wallet/listnodes"
      }
    };
  }

  rpc GetAssetIssueByAccount (Account) returns (AssetIssueList) {
    option (google.api.http) = {
      post: "/wallet/getassetissuebyaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/getassetissuebyaccount"
      }
    };
  }
  rpc GetAccountNet (Account) returns (AccountNetMessage) {
    option (google.api.http) = {
        post: "/wallet/getaccountnet"
        body: "*"
        additional_bindings {
          get: "/wallet/getaccountnet"
        }
      };
  };
  rpc GetAccountResource (Account) returns (AccountResourceMessage) {
  };
  rpc GetAssetIssueByName (BytesMessage) returns (AssetIssueContract) {
    option (google.api.http) = {
      post: "/wallet/getassetissuebyname"
      body: "*"
      additional_bindings {
        get: "/wallet/getassetissuebyname"
      }
    };
  }

  rpc GetTokenByName (BytesMessage) returns (CreateTokenContract) {
    option (google.api.http) = {
      post: "/wallet/gettokenbyname"
      body: "*"
      additional_bindings {
        get: "/wallet/gettokenbyname"
      }
    };
  }

  rpc GetPosBridgeConfig (EmptyMessage) returns (PosBridgeConfig) {
    option (google.api.http) = {
      post: "/wallet/getposbridgeconfig"
      body: "*"
      additional_bindings {
        get: "/wallet/getposbridgeconfig"
      }
    };
  }

  rpc GetPosBridgeTokenMap (EmptyMessage) returns (PosBridgeTokenMappingPage) {
    option (google.api.http) = {
      post: "/wallet/getposbridgetokenmap"
      body: "*"
      additional_bindings {
        get: "/wallet/getposbridgetokenmap"
      }
    };
  }

  rpc GetAssetIssueListByName (BytesMessage) returns (AssetIssueList) {
  }
  rpc GetAssetIssueById (BytesMessage) returns (AssetIssueContract) {
  }
  //Please use GetNowBlock2 instead of this function.
  rpc GetNowBlock (EmptyMessage) returns (Block) {
    option (google.api.http) = {
      post: "/wallet/getnowblock"
      body: "*"
      additional_bindings {
        get: "/wallet/getnowblock"
      }
    };
  }
  //Use this function instead of GetNowBlock.
  rpc GetNowBlock2 (EmptyMessage) returns (BlockExtention) {
  }
  //Please use GetBlockByNum2 instead of this function.
  rpc GetBlockByNum (NumberMessage) returns (Block) {
    option (google.api.http) = {
      post: "/wallet/getblockbynum"
      body: "*"
      additional_bindings {
        get: "/wallet/getblockbynum"
      }
    };
  }
  //Use this function instead of GetBlockByNum.
  rpc GetBlockByNum2 (NumberMessage) returns (BlockExtention) {
  }

  rpc GetTransactionCountByBlockNum (NumberMessage) returns (NumberMessage) {
  }

  rpc GetBlockById (BytesMessage) returns (Block) {
    option (google.api.http) = {
      post: "/wallet/getblockbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/getblockbyid"
      }
    };
  }
  //Please use GetBlockByLimitNext2 instead of this function.
  rpc GetBlockByLimitNext (BlockLimit) returns (BlockList) {
    option (google.api.http) = {
      post: "/wallet/getblockbylimitnext"
      body: "*"
      additional_bindings {
        get: "/wallet/getblockbylimitnext"
      }
    };
  }
  //Use this function instead of GetBlockByLimitNext.
  rpc GetBlockByLimitNext2 (BlockLimit) returns (BlockListExtention) {
  }
  //Please use GetBlockByLatestNum2 instead of this function.
  rpc GetBlockByLatestNum (NumberMessage) returns (BlockList) {
    option (google.api.http) = {
      post: "/wallet/getblockbylatestnum"
      body: "*"
      additional_bindings {
        get: "/wallet/getblockbylatestnum"
      }
    };
  }
  //Use this function instead of GetBlockByLatestNum.
  rpc GetBlockByLatestNum2 (NumberMessage) returns (BlockListExtention) {
  }
  rpc GetTransactionById (BytesMessage) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/gettransactionbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/gettransactionbyid"
      }
    };
  }

  rpc DeployContract (CreateSmartContract) returns (TransactionExtention) {
  }

  rpc GetContract (BytesMessage) returns (SmartContract) {
  }

  rpc TriggerContract (TriggerSmartContract) returns (TransactionExtention) {
  }

  rpc TriggerConstantContract (TriggerSmartContract) returns (TransactionExtention) {
  }

  rpc ClearContractABI (ClearABIContract) returns (TransactionExtention) {
  }

  rpc ListWitnesses (EmptyMessage) returns (WitnessList) {
    option (google.api.http) = {
      post: "/wallet/listwitnesses"
      body: "*"
      additional_bindings {
        get: "/wallet/listwitnesses"
      }
    };
  };


  rpc GetDelegatedResource (DelegatedResourceMessage) returns (DelegatedResourceList) {
  };

  rpc GetDelegatedResourceAccountIndex (BytesMessage) returns (DelegatedResourceAccountIndex) {
  };

  rpc ListProposals (EmptyMessage) returns (ProposalList) {
    option (google.api.http) = {
      post: "/wallet/listproposals"
      body: "*"
      additional_bindings {
        get: "/wallet/listproposals"
      }
    };
  };
  rpc GetPaginatedProposalList (PaginatedMessage) returns (ProposalList) {
    option (google.api.http) = {
          post: "/wallet/getpaginatedproposallist"
          body: "*"
          additional_bindings {
            get: "/wallet/getpaginatedproposallist"
          }
        };
  }
  rpc GetProposalById (BytesMessage) returns (Proposal) {
    option (google.api.http) = {
        post: "/wallet/getproposalbyid"
        body: "*"
        additional_bindings {
          get: "/wallet/getproposalbyid"
        }
      };
  };

  rpc ListExchanges (EmptyMessage) returns (ExchangeList) {
    option (google.api.http) = {
      post: "/wallet/listexchanges"
      body: "*"
      additional_bindings {
        get: "/wallet/listexchanges"
      }
    };
  };
  rpc GetPaginatedExchangeList (PaginatedMessage) returns (ExchangeList) {
    option (google.api.http) = {
          post: "/wallet/getpaginatedexchangelist"
          body: "*"
          additional_bindings {
            get: "/wallet/getpaginatedexchangelist"
          }
        };
  }
  rpc GetExchangeById (BytesMessage) returns (Exchange) {
    option (google.api.http) = {
        post: "/wallet/getexchangebyid"
        body: "*"
        additional_bindings {
          get: "/wallet/getexchangebyid"
        }
      };
  };

  rpc GetChainParameters (EmptyMessage) returns (ChainParameters) {
    option (google.api.http) = {
         post: "/wallet/getchainparameters"
         body: "*"
         additional_bindings {
           get: "/wallet/getchainparameters"
         }
       };
  };

  rpc GetAssetIssueList (EmptyMessage) returns (AssetIssueList) {
    option (google.api.http) = {
        post: "/wallet/getassetissuelist"
        body: "*"
        additional_bindings {
          get: "/wallet/getassetissuelist"
        }
      };
  }
  rpc GetPaginatedAssetIssueList (PaginatedMessage) returns (AssetIssueList) {
    option (google.api.http) = {
        post: "/wallet/getpaginatedassetissuelist"
        body: "*"
        additional_bindings {
          get: "/wallet/getpaginatedassetissuelist"
        }
      };
  }


  rpc TotalTransaction (EmptyMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/wallet/totaltransaction"
      body: "*"
      additional_bindings {
        get: "/wallet/totaltransaction"
      }
    };
  }
  rpc GetNextMaintenanceTime (EmptyMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/wallet/getnextmaintenancetime"
      body: "*"
      additional_bindings {
        get: "/wallet/getnextmaintenancetime"
      }
    };
  }
  //Warning: do not invoke this interface provided by others.
  //Please use GetTransactionSign2 instead of this function.
  rpc GetTransactionSign (TransactionSign) returns (Transaction) {
    option (google.api.http) = {
      post: "/wallet/gettransactionsign"
      body: "*"
      additional_bindings {
        get: "/wallet/gettransactionsign"
      }
    };
  };
  //Warning: do not invoke this interface provided by others.
  //Use this function instead of GetTransactionSign.
  rpc GetTransactionSign2 (TransactionSign) returns (TransactionExtention) {
  };
  //Warning: do not invoke this interface provided by others.
  rpc CreateAddress (BytesMessage) returns (BytesMessage) {
    option (google.api.http) = {
      post: "/wallet/createaddress"
      body: "*"
      additional_bindings {
        get: "/wallet/createaddress"
      }
    };
  };
  //Warning: do not invoke this interface provided by others.
  rpc EasyTransferAsset (EasyTransferAssetMessage) returns (EasyTransferResponse) {
  };
  //Warning: do not invoke this interface provided by others.
  rpc EasyTransferAssetByPrivate (EasyTransferAssetByPrivateMessage) returns (EasyTransferResponse) {
  };
  //Warning: do not invoke this interface provided by others.
  rpc EasyTransfer (EasyTransferMessage) returns (EasyTransferResponse) {
    option (google.api.http) = {
      post: "/wallet/easytransfer"
      body: "*"
      additional_bindings {
        get: "/wallet/easytransfer"
      }
    };
  };
  //Warning: do not invoke this interface provided by others.
  rpc EasyTransferByPrivate (EasyTransferByPrivateMessage) returns (EasyTransferResponse) {
    option (google.api.http) = {
      post: "/wallet/easytransferbyprivate"
      body: "*"
      additional_bindings {
        get: "/wallet/easytransferbyprivate"
      }
    };
  };
  //Warning: do not invoke this interface provided by others.
  rpc GenerateAddress (EmptyMessage) returns (AddressPrKeyPairMessage) {

    option (google.api.http) = {
      post: "/wallet/generateaddress"
      body: "*"
      additional_bindings {
        get: "/wallet/generateaddress"
      }
    };
  }

  rpc GetTransactionInfoById (BytesMessage) returns (TransactionInfo) {
    option (google.api.http) = {
      post: "/wallet/gettransactioninfobyid"
      body: "*"
      additional_bindings {
        get: "/wallet/gettransactioninfobyid"
      }
    };
  }

  rpc AccountPermissionUpdate (AccountPermissionUpdateContract) returns (TransactionExtention) {
    option (google.api.http) = {
      post: "/wallet/accountpermissionupdate"
      body: "*"
      additional_bindings {
        get: "/wallet/accountpermissionupdate"
      }
    };
  }

  rpc AddSign (TransactionSign) returns (TransactionExtention) {

  }

  rpc GetTransactionSignWeight (Transaction) returns (TransactionSignWeight) {

  }

  rpc GetTransactionApprovedList (Transaction) returns (TransactionApprovedList) {

  }

  rpc GetNodeInfo (EmptyMessage) returns (NodeInfo) {
  };

  rpc GetRewardInfo (BytesMessage) returns (NumberMessage) {
  };

  rpc GetBrokerageInfo (BytesMessage) returns (NumberMessage) {
  };

  rpc UpdateBrokerage (UpdateBrokerageContract) returns (TransactionExtention) {

  };
};

service WalletSolidity {
  rpc GetFutureTransfer (FutureQuery) returns (FuturePack) {
    option (google.api.http) = {
      post: "/walletsolidity/getfuturetransfer"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getfuturetransfer"
      }
    };
  };

  /**
    Urc30
   */
  rpc GetFutureToken (FutureTokenQuery) returns (FutureTokenPack) {
    option (google.api.http) = {
      post: "/walletsolidity/getfuturetoken"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getfuturetoken"
      }
    };
  };

  rpc GetTokenPool (TokenPoolQuery) returns (TokenPage) {
    option (google.api.http) = {
      post: "/walletsolidity/gettokenpool"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/gettokenpool"
      }
    };
  };

  /**
  Urc20
 */
  rpc Urc20FutureGet (Urc20FutureTokenQuery) returns (Urc20FutureTokenPack) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20futureget"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20futureget"
      }
    };
  };

  rpc Urc20ContractList (Urc20ContractQuery) returns (Urc20ContractPage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20contractlist"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20contractlist"
      }
    };
  };

  rpc Urc20Name (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20name"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20name"
      }
    };
  };

  rpc Urc20Symbol (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20symbol"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20symbol"
      }
    };
  };

  rpc Urc20Decimals (AddressMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20decimals"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20decimals"
      }
    };
  };

  rpc Urc20TotalSupply (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20totalsupply"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20totalsupply"
      }
    };
  };

  rpc Urc20BalanceOf (Urc20BalanceOfQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20balanceof"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20balanceof"
      }
    };
  };

  rpc Urc20GetOwner (AddressMessage) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20getowner"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20getowner"
      }
    };
  };

  rpc Urc20Allowance (Urc20AllowanceQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc20allowance"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc20allowance"
      }
    };
  };


  /**
     urc721
    */
  rpc Urc721ListContract (Urc721ContractQuery) returns (Urc721ContractPage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721contractlist"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721contractlist"
      }
    };
  };

  rpc Urc721ListToken (Urc721TokenListQuery) returns (Urc721TokenPage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721tokenlist"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721tokenlist"
      }
    };
  };

  rpc Urc721GetContract (AddressMessage) returns (Urc721Contract) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721contractget"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721contractget"
      }
    };
  };

  rpc Urc721GetToken (Urc721TokenQuery) returns (Urc721Token) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721tokenget"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721tokenget"
      }
    };
  };

  rpc Urc721GetBalanceOf (Urc721BalanceOfQuery) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721balanceof"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721balanceof"
      }
    };
  };

  rpc Urc721GetName (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721name"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721name"
      }
    };
  };

  rpc Urc721GetSymbol (AddressMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721symbol"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721symbol"
      }
    };
  };

  rpc Urc721GetTotalSupply (AddressMessage) returns (NumberMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721totalsupply"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721totalsupply"
      }
    };
  };

  rpc Urc721GetTokenUri (Urc721TokenQuery) returns (StringMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721tokenuri"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721tokenuri"
      }
    };
  };

  rpc Urc721GetOwnerOf (Urc721TokenQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721ownerof"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721ownerof"
      }
    };
  };

  rpc Urc721GetApproved (Urc721TokenQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721getapproved"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721getapproved"
      }
    };
  };

  rpc Urc721GetApprovedForAll (Urc721ApprovedForAllQuery) returns (AddressMessage) {
    option (google.api.http) = {
      post: "/wallet/urc721getapprovedforall"
      body: "*"
      additional_bindings {
        get: "/wallet/urc721getapprovedforall"
      }
    };
  };

  rpc Urc721IsApprovedForAll (Urc721IsApprovedForAllQuery) returns (BoolMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/urc721isapprovedforall"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/urc721isapprovedforall"
      }
    };
  };

  //POSBridge
  rpc GetPosBridgeConfig (EmptyMessage) returns (PosBridgeConfig) {
    option (google.api.http) = {
      post: "/walletsolidity/getposbridgeconfig"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getposbridgeconfig"
      }
    };
  }

  rpc GetPosBridgeTokenMap (EmptyMessage) returns (PosBridgeTokenMappingPage) {
    option (google.api.http) = {
      post: "/walletsolidity/getposbridgetokenmap"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getposbridgetokenmap"
      }
    };
  }

  rpc GetAccount (Account) returns (Account) {
    option (google.api.http) = {
      post: "/walletsolidity/getaccount"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getaccount"
      }
    };
  };


  rpc GetAccountById (Account) returns (Account) {
    option (google.api.http) = {
      post: "/walletsolidity/getaccountbyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getaccountbyid"
      }
    };
  };

  rpc ListWitnesses (EmptyMessage) returns (WitnessList) {
    option (google.api.http) = {
      post: "/walletsolidity/listwitnesses"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/listwitnesses"
      }
    };
  };
  rpc GetAssetIssueList (EmptyMessage) returns (AssetIssueList) {
    option (google.api.http) = {
      post: "/walletsolidity/getassetissuelist"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getassetissuelist"
      }
    };
  }
  rpc GetPaginatedAssetIssueList (PaginatedMessage) returns (AssetIssueList) {
    option (google.api.http) = {
        post: "/walletsolidity/getpaginatedassetissuelist"
        body: "*"
        additional_bindings {
          get: "/walletsolidity/getpaginatedassetissuelist"
        }
      };
  }

  rpc GetAssetIssueByName (BytesMessage) returns (AssetIssueContract) {
  }
  rpc GetAssetIssueListByName (BytesMessage) returns (AssetIssueList) {
  }
  rpc GetAssetIssueById (BytesMessage) returns (AssetIssueContract) {
  }

  //Please use GetNowBlock2 instead of this function.
  rpc GetNowBlock (EmptyMessage) returns (Block) {
    option (google.api.http) = {
      post: "/walletsolidity/getnowblock"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getnowblock"
      }
    };
  }
  //Use this function instead of GetNowBlock.
  rpc GetNowBlock2 (EmptyMessage) returns (BlockExtention) {
  }
  //Please use GetBlockByNum2 instead of this function.
  rpc GetBlockByNum (NumberMessage) returns (Block) {
    option (google.api.http) = {
      post: "/walletsolidity/getblockbynum"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getblockbynum"
      }
    };
  }
  //Use this function instead of GetBlockByNum.
  rpc GetBlockByNum2 (NumberMessage) returns (BlockExtention) {
  }

  rpc GetTransactionCountByBlockNum (NumberMessage) returns (NumberMessage) {
  }

  rpc GetDelegatedResource (DelegatedResourceMessage) returns (DelegatedResourceList) {
  };

  rpc GetDelegatedResourceAccountIndex (BytesMessage) returns (DelegatedResourceAccountIndex) {
  };

  rpc GetExchangeById (BytesMessage) returns (Exchange) {
  };

  rpc ListExchanges (EmptyMessage) returns (ExchangeList) {
  };


  rpc GetTransactionById (BytesMessage) returns (Transaction) {
    option (google.api.http) = {
      post: "/walletsolidity/gettransactionbyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/gettransactionbyid"
      }
    };
  }

  rpc GetTransactionInfoById (BytesMessage) returns (TransactionInfo) {
    option (google.api.http) = {
      post: "/walletsolidity/gettransactioninfobyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/gettransactioninfobyid"
      }
    };
  }

  //Warning: do not invoke this interface provided by others.
  rpc GenerateAddress (EmptyMessage) returns (AddressPrKeyPairMessage) {
    option (google.api.http) = {
      post: "/walletsolidity/generateaddress"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/generateaddress"
      }
    };
  }

  rpc GetRewardInfo (BytesMessage) returns (NumberMessage) {
  };

  rpc GetBrokerageInfo (BytesMessage) returns (NumberMessage) {
  };

  rpc TriggerConstantContract (TriggerSmartContract) returns (TransactionExtention) {
  }

};

service WalletExtension {
  //Please use GetTransactionsFromThis2 instead of this function.
  rpc GetTransactionsFromThis (AccountPaginated) returns (TransactionList) {
    option (google.api.http) = {
      post: "/walletextension/gettransactionsfromthis"
      body: "*"
      additional_bindings {
        get: "/walletextension/gettransactionsfromthis"
      }
    };
  }
  //Use this function instead of GetTransactionsFromThis.
  rpc GetTransactionsFromThis2 (AccountPaginated) returns (TransactionListExtention) {
  }
  //Please use GetTransactionsToThis2 instead of this function.
  rpc GetTransactionsToThis (AccountPaginated) returns (TransactionList) {
    option (google.api.http) = {
      post: "/walletextension/gettransactionstothis"
      body: "*"
      additional_bindings {
        get: "/walletextension/gettransactionstothis"
      }
    };
  }
  //Use this function instead of GetTransactionsToThis.
  rpc GetTransactionsToThis2 (AccountPaginated) returns (TransactionListExtention) {
  }
};

// the api of unichain's db
service Database {
  // for tapos
  rpc getBlockReference (EmptyMessage) returns (BlockReference) {

  }
  rpc GetDynamicProperties (EmptyMessage) returns (DynamicProperties) {

  }
  rpc GetNowBlock (EmptyMessage) returns (Block) {

  }
  rpc GetBlockByNum (NumberMessage) returns (Block) {

  }
};

message Return {
  enum response_code {
    SUCCESS = 0;
    SIGERROR = 1; // error in signature
    CONTRACT_VALIDATE_ERROR = 2;
    CONTRACT_EXE_ERROR = 3;
    BANDWITH_ERROR = 4;
    DUP_TRANSACTION_ERROR = 5;
    TAPOS_ERROR = 6;
    TOO_BIG_TRANSACTION_ERROR = 7;
    TRANSACTION_EXPIRATION_ERROR = 8;
    SERVER_BUSY = 9;
    NO_CONNECTION = 10;
    NOT_ENOUGH_EFFECTIVE_CONNECTION = 11;
    NOT_ENOUGH_RESOURCE = 12;
    OTHER_ERROR = 20;
  }

  bool result = 1;
  response_code code = 2;
  bytes message = 3;
}

message BlockReference {
  int64 block_num = 1;
  bytes block_hash = 2;
}

// the api of unichain's network such as node list.
service Network {

};

message WitnessList {
  repeated Witness witnesses = 1;
}
message ProposalList {
  repeated Proposal proposals = 1;
}
message ExchangeList {
  repeated Exchange exchanges = 1;
}
message AssetIssueList {
  repeated AssetIssueContract assetIssue = 1;
}

message TokenList {
  repeated CreateTokenContract token = 1;
}

message BlockList {
  repeated Block block = 1;
}
message TransactionList {
  repeated Transaction transaction = 1;
}
message DelegatedResourceMessage {
  bytes fromAddress = 1;
  bytes toAddress = 2;
}
message DelegatedResourceList {
  repeated DelegatedResource delegatedResource = 1;
}

// Gossip node list
message NodeList {
  repeated Node nodes = 1;
}

// Gossip node
message Node {
  Address address = 1;
}

// Gossip node address
message Address {
  bytes host = 1;
  int32 port = 2;
}

message EmptyMessage {
}
message NumberMessage {
  int64 num = 1;
}
message BytesMessage {
  bytes value = 1;
}

message StringMessage {
  string value = 1;
}

message TimeMessage {
  int64 beginInMilliseconds = 1;
  int64 endInMilliseconds = 2;
}
message BlockLimit {
  int64 startNum = 1;
  int64 endNum = 2;
}
message TransactionLimit {
  bytes transactionId = 1;
  int64 limitNum = 2;
}
message AccountPaginated {
  Account account = 1;
  int64 offset = 2;
  int64 limit = 3;
}
message TimePaginatedMessage {
  TimeMessage timeMessage = 1;
  int64 offset = 2;
  int64 limit = 3;
}
//deprecated
message AccountNetMessage {
  int64 freeNetUsed = 1;
  int64 freeNetLimit = 2;
  int64 NetUsed = 3;
  int64 NetLimit = 4;
  map<string, int64> assetNetUsed = 5;
  map<string, int64> assetNetLimit = 6;
  int64 TotalNetLimit = 7;
  int64 TotalNetWeight = 8;
}
message AccountResourceMessage {
  int64 freeNetUsed = 1;
  int64 freeNetLimit = 2;
  int64 NetUsed = 3;
  int64 NetLimit = 4;
  map<string, int64> assetNetUsed = 5;
  map<string, int64> assetNetLimit = 6;
  int64 TotalNetLimit = 7;
  int64 TotalNetWeight = 8;

  int64 EnergyUsed = 13;
  int64 EnergyLimit = 14;
  int64 TotalEnergyLimit = 15;
  int64 TotalEnergyWeight = 16;

  int64 storageUsed = 21;
  int64 storageLimit = 22;
}

message PaginatedMessage {
  int64 offset = 1;
  int64 limit = 2;
}

message EasyTransferMessage {
  bytes passPhrase = 1;
  bytes toAddress = 2;
  int64 amount = 3;
}

message EasyTransferAssetMessage {
  bytes passPhrase = 1;
  bytes toAddress = 2;
  string assetId = 3;
  int64 amount = 4;
}

message EasyTransferByPrivateMessage {
  bytes privateKey = 1;
  bytes toAddress = 2;
  int64 amount = 3;
}

message EasyTransferAssetByPrivateMessage {
  bytes privateKey = 1;
  bytes toAddress = 2;
  string assetId = 3;
  int64 amount = 4;
}

message EasyTransferResponse {
  Transaction transaction = 1;
  Return result = 2;
  bytes txid = 3; //transaction id =  sha256(transaction.rowdata)
}

message AddressPrKeyPairMessage {
  string address = 1;
  string privateKey = 2;
}

message TransactionExtention {
  Transaction transaction = 1;
  bytes txid = 2; //transaction id =  sha256(transaction.rowdata)
  repeated bytes constant_result = 3;
  Return result = 4;
}

message BlockExtention {
  repeated TransactionExtention transactions = 1;
  BlockHeader block_header = 2;
  bytes blockid = 3;
}

message BlockListExtention {
  repeated BlockExtention block = 1;
}

message TransactionListExtention {
  repeated TransactionExtention transaction = 1;
}

message TransactionSignWeight {
  message Result {
    enum response_code {
      ENOUGH_PERMISSION = 0;
      NOT_ENOUGH_PERMISSION = 1; // error in
      SIGNATURE_FORMAT_ERROR = 2;
      COMPUTE_ADDRESS_ERROR = 3;
      PERMISSION_ERROR = 4; //The key is not in permission
      OTHER_ERROR = 20;
    }
    response_code code = 1;
    string message = 2;
  }

  Permission permission = 1;
  repeated bytes approved_list = 2;
  int64 current_weight = 3;
  Result result = 4;
  TransactionExtention transaction = 5;
}

message TransactionApprovedList {
  message Result {
    enum response_code {
      SUCCESS = 0;
      SIGNATURE_FORMAT_ERROR = 1;
      COMPUTE_ADDRESS_ERROR = 2;
      OTHER_ERROR = 20;
    }
    response_code code = 1;
    string message = 2;
  }

  repeated bytes approved_list = 2;
  Result result = 4;
  TransactionExtention transaction = 5;
}
